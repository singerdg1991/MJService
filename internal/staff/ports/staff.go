package ports

import (
	"github.com/hoitek/Kit/restypes"
	"github.com/hoitek/Maja-Service/internal/_shared/types"
	"github.com/hoitek/Maja-Service/internal/staff/domain"
	"github.com/hoitek/Maja-Service/internal/staff/models"
)

type StaffService interface {
	Query(dataModel *models.StaffsQueryRequestParams) (*restypes.QueryResponse, error)
	QueryLicenses(dataModel *models.StaffsQueryLicensesRequestParams) (*restypes.QueryResponse, error)
	QueryAbsences(dataModel *models.StaffsQueryAbsencesRequestParams) (*restypes.QueryResponse, error)
	FindByUserID(userId int) (*domain.Staff, error)
	FindByID(id int) (*domain.Staff, error)
	FindStaffLicenseByID(id int) (*domain.StaffLicensesRes, error)
	FindStaffAbsenceByID(id int) (*domain.StaffAbsenceRes, error)
	Delete(payload *models.StaffsDeleteRequestBody) (*restypes.DeleteResponse, error)
	DeleteLicenses(payload *models.StaffsDeleteLicensesRequestBody) (*restypes.DeleteResponse, error)
	DeleteAbsences(payload *models.StaffsDeleteAbsencesRequestBody) (*restypes.DeleteResponse, error)
	CreateOrUpdateContract(payload *models.StaffsCreateOrUpdateContractRequestBody) (*domain.Staff, error)
	ExportToCsvAndSave(data []*domain.Staff, dest string) (string, error)
	CreateLicenses(staff *domain.Staff, payload *models.StaffsCreateLicensesRequestBody) (*domain.StaffLicensesRes, error)
	CreateAbsences(staff *domain.Staff, payload *models.StaffsCreateAbsencesRequestBody) (*domain.StaffAbsencesQueryRes, error)
	HasLicense(staffID uint, licenseID uint) (bool, error)
	HasLicenseExcept(staffID uint, licenseID uint, staffLicenseID uint) (bool, error)
	UpdateLicense(staffLicense *domain.StaffLicensesRes, payload *models.StaffsUpdateLicenseRequestBody) (*domain.StaffLicensesRes, error)
	UpdateAbsence(staffAbsence *domain.StaffAbsenceRes, payload *models.StaffsUpdateAbsenceRequestBody) (*domain.StaffAbsenceRes, error)
	CreateEmptyStaffForUser(userId int) (*domain.Staff, error)
	GenerateStaffOrganizationNumber() (string, error)
	QueryProfile(query *models.StaffsQueryProfileRequestParams) (*domain.StaffProfile, error)
	CreateStaff(userId int64, payload *models.StaffsCreatePersonalInfoRequestBody) (*domain.Staff, error)
	UpdateStaff(userId int64, payload *models.StaffsUpdatePersonalInfoRequestBody) (*domain.Staff, error)
	GenerateRegistrationNumber() (string, error)
	UpdateAbsenceAttachments(previousAttachments []types.UploadMetadata, attachments []*types.UploadMetadata, id int64) (*domain.StaffAbsencesQueryRes, error)
	UpdateLicenseAttachments(previousAttachments []types.UploadMetadata, attachments []*types.UploadMetadata, id int64) (*domain.StaffLicensesRes, error)
	CreateOtherAttachments(staff *domain.Staff, payload *models.StaffsCreateOtherAttachmentsRequestBody) (*domain.StaffOtherAttachment, error)
	UpdateStaffOtherAttachments(attachments []*types.UploadMetadata, id int64) (*domain.StaffOtherAttachment, error)
	QueryOtherAttachments(dataModel *models.StaffsQueryOtherAttachmentsRequestParams) (*restypes.QueryResponse, error)
	FindStaffOtherAttachmentByID(id int) (*domain.StaffOtherAttachment, error)
	UpdateStaffOtherAttachment(staffOtherAttachment *domain.StaffOtherAttachment, payload *models.StaffsUpdateOtherAttachmentRequestBody) (*domain.StaffOtherAttachment, error)
	DeleteStaffOtherAttachments(payload *models.StaffsDeleteOtherAttachmentsRequestBody) (*restypes.DeleteResponse, error)
	CreateLibraries(staff *domain.Staff, payload *models.StaffsCreateLibrariesRequestBody) (*domain.StaffLibrary, error)
	UpdateStaffLibraries(libraries []*types.UploadMetadata, id int64) (*domain.StaffLibrary, error)
	QueryLibraries(dataModel *models.StaffsQueryLibrariesRequestParams) (*restypes.QueryResponse, error)
	FindStaffLibraryByID(id int) (*domain.StaffLibrary, error)
	UpdateStaffLibrary(staffLibrary *domain.StaffLibrary, payload *models.StaffsUpdateLibraryRequestBody) (*domain.StaffLibrary, error)
	DeleteStaffLibraries(payload *models.StaffsDeleteLibrariesRequestBody) (*restypes.DeleteResponse, error)
	UpdateStaffAttachments(previousAttachments []types.UploadMetadata, attachments []*types.UploadMetadata, id int64) (*domain.Staff, error)
	QueryChats(dataModel *models.StaffsQueryChatsRequestParams) (*restypes.QueryResponse, error)
	QueryChatMessages(dataModel *models.StaffsQueryChatMessagesRequestParams) (*restypes.QueryResponse, error)
	CreateChatMessage(payload *models.StaffsCreateChatMessageRequestBody) (*domain.StaffChatMessage, error)
	UpdateChatMessageAttachments(previousAttachments []types.UploadMetadata, attachments []*types.UploadMetadata, id int64) (*domain.StaffChatMessage, error)
}

type StaffRepositoryPostgresDB interface {
	Query(dataModel *models.StaffsQueryRequestParams) ([]*domain.Staff, error)
	FindStaffLicenseByID(id int) (*domain.StaffLicensesRes, error)
	FindStaffAbsenceByID(id int) (*domain.StaffAbsenceRes, error)
	QueryLicenses(dataModel *models.StaffsQueryLicensesRequestParams) ([]*domain.StaffLicensesRes, int64, error)
	QueryAbsences(dataModel *models.StaffsQueryAbsencesRequestParams) ([]*domain.StaffAbsencesQueryRes, int64, error)
	Count(dataModel *models.StaffsQueryRequestParams) (int64, error)
	Delete(payload *models.StaffsDeleteRequestBody) ([]int64, error)
	DeleteLicenses(payload *models.StaffsDeleteLicensesRequestBody) ([]int64, *domain.Staff, error)
	DeleteAbsences(payload *models.StaffsDeleteAbsencesRequestBody) ([]int64, *domain.Staff, error)
	CreateEmptyStaffForUser(userId int) (*domain.Staff, error)
	CreateOrUpdateContract(payload *models.StaffsCreateOrUpdateContractRequestBody) (*domain.Staff, error)
	CreateLicenses(staff *domain.Staff, payload *models.StaffsCreateLicensesRequestBody) (*domain.Staff, *domain.StaffLicensesRes, error)
	CreateAbsences(staff *domain.Staff, payload *models.StaffsCreateAbsencesRequestBody) (*domain.StaffAbsencesQueryRes, error)
	HasLicense(staffID uint, licenseID uint) (bool, error)
	HasLicenseExcept(staffID uint, licenseID uint, staffLicenseID uint) (bool, error)
	UpdateLicense(staffLicense *domain.StaffLicensesRes, payload *models.StaffsUpdateLicenseRequestBody) (*domain.Staff, *domain.StaffLicensesRes, error)
	UpdateAbsence(staffAbsence *domain.StaffAbsenceRes, payload *models.StaffsUpdateAbsenceRequestBody) (*domain.Staff, *domain.StaffAbsenceRes, error)
	GenerateStaffOrganizationNumber() (string, error)
	QueryProfile(query *models.StaffsQueryProfileRequestParams) (*domain.StaffProfile, error)
	CreateStaff(userId int64, payload *models.StaffsCreatePersonalInfoRequestBody) (*domain.Staff, error)
	UpdateStaff(userId int64, payload *models.StaffsUpdatePersonalInfoRequestBody) (*domain.Staff, error)
	UpdateAbsenceAttachments(previousAttachments []types.UploadMetadata, attachments []*types.UploadMetadata, id int64) (*domain.StaffAbsencesQueryRes, error)
	UpdateLicenseAttachments(previousAttachments []types.UploadMetadata, attachments []*types.UploadMetadata, id int64) (*domain.StaffLicensesRes, error)
	CreateOtherAttachments(staff *domain.Staff, payload *models.StaffsCreateOtherAttachmentsRequestBody) (*domain.StaffOtherAttachment, error)
	UpdateStaffOtherAttachments(attachments []*types.UploadMetadata, id int64) (*domain.StaffOtherAttachment, error)
	QueryOtherAttachments(dataModel *models.StaffsQueryOtherAttachmentsRequestParams) ([]*domain.StaffOtherAttachment, int64, error)
	UpdateStaffOtherAttachment(staffOtherAttachment *domain.StaffOtherAttachment, payload *models.StaffsUpdateOtherAttachmentRequestBody) (*domain.StaffOtherAttachment, error)
	DeleteStaffOtherAttachments(payload *models.StaffsDeleteOtherAttachmentsRequestBody) ([]int64, error)
	CreateLibraries(staff *domain.Staff, payload *models.StaffsCreateLibrariesRequestBody) (*domain.StaffLibrary, error)
	UpdateStaffLibraries(libraries []*types.UploadMetadata, id int64) (*domain.StaffLibrary, error)
	QueryLibraries(dataModel *models.StaffsQueryLibrariesRequestParams) ([]*domain.StaffLibrary, int64, error)
	UpdateStaffLibrary(staffLibrary *domain.StaffLibrary, payload *models.StaffsUpdateLibraryRequestBody) (*domain.StaffLibrary, error)
	DeleteStaffLibraries(payload *models.StaffsDeleteLibrariesRequestBody) ([]int64, error)
	UpdateStaffAttachments(previousAttachments []types.UploadMetadata, attachments []*types.UploadMetadata, id int64) (*domain.Staff, error)
	QueryChats(queries *models.StaffsQueryChatsRequestParams) ([]*domain.StaffChat, error)
	CountChats(queries *models.StaffsQueryChatsRequestParams) (int64, error)
	QueryChatMessages(queries *models.StaffsQueryChatMessagesRequestParams) ([]*domain.StaffChatMessage, error)
	CountChatMessages(queries *models.StaffsQueryChatMessagesRequestParams) (int64, error)
	CreateChatMessage(payload *models.StaffsCreateChatMessageRequestBody) (*domain.StaffChatMessage, error)
	UpdateChatMessageAttachments(previousAttachments []types.UploadMetadata, attachments []*types.UploadMetadata, id int64) (*domain.StaffChatMessage, error)
}

type StaffRepositoryMongoDB interface {
	Query(queries *models.StaffsQueryRequestParams) ([]*domain.Staff, error)
	Count(queries *models.StaffsQueryRequestParams) (int64, error)
	Create(postgresID int, payload interface{}) (interface{}, error)
	CreateOrUpdate(postgresID int, payload interface{}) (interface{}, error)
	CreateEmptyForUserID(payload interface{}) (interface{}, error)
	UpdateByPostgresID(postgresID int, payload interface{}) (interface{}, error)
	UpdateUserInfo(userID int, payload interface{}) (interface{}, error)
	Update(payload interface{}, id int) error
	Delete(ids []uint) error
}
